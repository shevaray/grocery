{"version":3,"file":"overflow-container.component.d.ts","sources":["overflow-container.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { QueryList, ElementRef, OnInit, AfterContentInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\nimport { NzResizeObserver } from 'ng-zorro-antd/cdk/resize-observer';\nimport { NzOverflowItemDirective } from './overflow-item.directive';\nimport { NzOverflowRestDirective } from './overflow-rest.directive';\nimport { NzOverflowSuffixDirective } from './overflow-suffix.directive';\nexport declare class NzOverflowContainerComponent implements OnInit, AfterContentInit, OnDestroy {\n    private nzResizeObserver;\n    private elementRef;\n    private cdr;\n    contentInit$: Subject<void>;\n    overflowItems: QueryList<NzOverflowItemDirective> | undefined;\n    overflowSuffix: NzOverflowSuffixDirective | undefined;\n    overflowRest: NzOverflowRestDirective | undefined;\n    overflowItems$: ReplaySubject<QueryList<NzOverflowItemDirective>>;\n    destroy$: Subject<void>;\n    containerWidth$: Observable<number>;\n    restWidth$: BehaviorSubject<number>;\n    suffixWidth$: BehaviorSubject<number>;\n    suffixFixedStart$: BehaviorSubject<number | null>;\n    displayCount$: BehaviorSubject<number>;\n    restReady$: BehaviorSubject<boolean>;\n    maxRestWith$: Observable<number>;\n    omittedItems$: Observable<NzOverflowItemDirective[]>;\n    displayRest$: Observable<boolean>;\n    updateDisplayCount(count: number, notReady?: boolean): void;\n    constructor(nzResizeObserver: NzResizeObserver, elementRef: ElementRef, cdr: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n}\n"]}