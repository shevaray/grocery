{"version":3,"file":"ng-zorro-antd-cdk-overflow.js","sources":["../../components/cdk/overflow/overflow-item.directive.ts","../../components/cdk/overflow/overflow-rest.directive.ts","../../components/cdk/overflow/overflow-suffix.directive.ts","../../components/cdk/overflow/overflow-container.component.ts","../../components/cdk/overflow/overflow.module.ts","../../components/cdk/overflow/public-api.ts","../../components/cdk/overflow/ng-zorro-antd-cdk-overflow.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectorRef, Directive, ElementRef } from '@angular/core';\nimport { distinctUntilChanged, map, startWith, tap } from 'rxjs/operators';\n\nimport { NzResizeObserver } from 'ng-zorro-antd/cdk/resize-observer';\n\n@Directive({\n  selector: '[nzOverflowItem]',\n  host: {\n    '[style]': 'overflowStyle'\n  }\n})\nexport class NzOverflowItemDirective {\n  overflowStyle: { [key: string]: string | number | undefined } | undefined = undefined;\n  itemWidth$ = this.nzResizeObserver.observe(this.elementRef.nativeElement).pipe(\n    map(([item]) => (item.target as HTMLElement).offsetWidth),\n    distinctUntilChanged(),\n    startWith(undefined),\n    tap(width => {\n      this.itemWidth = width;\n    })\n  );\n  itemWidth: number | undefined = undefined;\n  constructor(\n    private nzResizeObserver: NzResizeObserver,\n    public elementRef: ElementRef,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  setItemStyle(display: boolean, order: number): void {\n    const mergedHidden = !display;\n    this.overflowStyle = {\n      opacity: mergedHidden ? 0 : 1,\n      height: mergedHidden ? 0 : undefined,\n      overflowY: mergedHidden ? 'hidden' : undefined,\n      order: order,\n      pointerEvents: mergedHidden ? 'none' : undefined,\n      position: mergedHidden ? 'absolute' : undefined\n    };\n    this.cdr.detectChanges();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectorRef, Directive, ElementRef } from '@angular/core';\nimport { map, startWith, tap } from 'rxjs/operators';\n\nimport { NzResizeObserver } from 'ng-zorro-antd/cdk/resize-observer';\n\n@Directive({\n  selector: '[nzOverflowRest]',\n  host: {\n    '[style]': 'restStyle'\n  }\n})\nexport class NzOverflowRestDirective {\n  restStyle: { [key: string]: string | number | undefined } | undefined = undefined;\n  restWidth$ = this.nzResizeObserver.observe(this.elementRef.nativeElement).pipe(\n    map(([item]) => (item.target as HTMLElement).offsetWidth),\n    startWith(0),\n    tap(width => (this.restWidth = width))\n  );\n  restWidth = 0;\n  constructor(\n    private nzResizeObserver: NzResizeObserver,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  setRestStyle(display: boolean, order: number): void {\n    const mergedHidden = !display;\n    this.restStyle = {\n      opacity: mergedHidden ? 0 : 1,\n      height: mergedHidden ? 0 : undefined,\n      overflowY: mergedHidden ? 'hidden' : undefined,\n      order: order,\n      pointerEvents: mergedHidden ? 'none' : undefined,\n      position: mergedHidden ? 'absolute' : undefined\n    };\n    this.cdr.detectChanges();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectorRef, Directive, ElementRef } from '@angular/core';\nimport { map, tap } from 'rxjs/operators';\n\nimport { NzResizeObserver } from 'ng-zorro-antd/cdk/resize-observer';\n\n@Directive({\n  selector: '[nzOverflowSuffix]',\n  host: {\n    '[style]': 'suffixStyle'\n  }\n})\nexport class NzOverflowSuffixDirective {\n  suffixStyle = {};\n  suffixWidth$ = this.nzResizeObserver.observe(this.elementRef.nativeElement).pipe(\n    map(([item]) => (item.target as HTMLElement).offsetWidth),\n    tap(width => (this.suffixWidth = width))\n  );\n  suffixWidth = 0;\n  constructor(\n    private nzResizeObserver: NzResizeObserver,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  setSuffixStyle(start: number | null, order: number): void {\n    if (start !== null) {\n      this.suffixStyle = {\n        position: 'absolute',\n        left: `${start}px`,\n        top: 0,\n        opacity: 1,\n        order: order\n      };\n    } else {\n      this.suffixStyle = {\n        opacity: 1,\n        order: order\n      };\n    }\n    this.cdr.detectChanges();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  QueryList,\n  ElementRef,\n  OnInit,\n  AfterContentInit,\n  OnDestroy,\n  ContentChild,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, pairwise, startWith, switchMap, takeUntil, withLatestFrom } from 'rxjs/operators';\n\nimport { NzResizeObserver } from 'ng-zorro-antd/cdk/resize-observer';\n\nimport { NzOverflowItemDirective } from './overflow-item.directive';\nimport { NzOverflowRestDirective } from './overflow-rest.directive';\nimport { NzOverflowSuffixDirective } from './overflow-suffix.directive';\n\n@Component({\n  selector: 'nz-overflow-container',\n  template: ` <ng-content></ng-content>\n    <ng-content select=\"[appOverflowRest]\"></ng-content>\n    <ng-content select=\"[appOverflowSuffix]\"></ng-content>`,\n  providers: [NzResizeObserver],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzOverflowContainerComponent implements OnInit, AfterContentInit, OnDestroy {\n  contentInit$ = new Subject<void>();\n  @ContentChildren(NzOverflowItemDirective)\n  overflowItems: QueryList<NzOverflowItemDirective> | undefined = undefined;\n  @ContentChild(NzOverflowSuffixDirective)\n  overflowSuffix: NzOverflowSuffixDirective | undefined = undefined;\n  @ContentChild(NzOverflowRestDirective) overflowRest: NzOverflowRestDirective | undefined = undefined;\n  overflowItems$ = new ReplaySubject<QueryList<NzOverflowItemDirective>>(1);\n  destroy$ = new Subject<void>();\n  containerWidth$ = this.nzResizeObserver\n    .observe(this.elementRef.nativeElement)\n    .pipe(map(([item]) => item.target.clientWidth || 0));\n  restWidth$ = new BehaviorSubject<number>(0);\n  suffixWidth$ = new BehaviorSubject<number>(0);\n  suffixFixedStart$ = new BehaviorSubject<number | null>(null);\n  displayCount$ = new BehaviorSubject<number>(Number.MAX_SAFE_INTEGER);\n  restReady$ = new BehaviorSubject<boolean>(false);\n  maxRestWith$ = this.restWidth$.pipe(\n    pairwise(),\n    map(([prevRestWidth, restWidth]) => Math.max(prevRestWidth, restWidth))\n  );\n  omittedItems$ = combineLatest([this.overflowItems$, this.displayCount$]).pipe(\n    withLatestFrom(this.contentInit$),\n    map(([[overflowItems, displayCount]]) => overflowItems.toArray().slice(displayCount + 1))\n  );\n  displayRest$ = combineLatest([this.restReady$, this.omittedItems$]).pipe(\n    map(([restReady, omittedItems]) => restReady && !!omittedItems.length)\n  );\n\n  updateDisplayCount(count: number, notReady?: boolean): void {\n    this.displayCount$.next(count);\n    if (this.overflowItems && !notReady) {\n      this.restReady$.next(count < this.overflowItems.length - 1);\n    }\n  }\n\n  constructor(\n    private nzResizeObserver: NzResizeObserver,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    const overflowItemsWidth$ = this.overflowItems$.pipe(\n      switchMap(items => combineLatest(items.map(item => item.itemWidth$)))\n    ) as Observable<number[]>;\n    this.overflowItems$.pipe(takeUntil(this.destroy$)).subscribe(overflowItems => {\n      if (!overflowItems.length) {\n        this.displayCount$.next(0);\n        this.suffixFixedStart$.next(null);\n      }\n    });\n    combineLatest([overflowItemsWidth$, this.containerWidth$, this.maxRestWith$, this.restWidth$, this.suffixWidth$])\n      .pipe(\n        filter(([, containerWidth, maxRestWith]) => !!(containerWidth && maxRestWith)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(([overflowItemsWidth, containerWidth, maxRestWith, restWidth, suffixWidth]) => {\n        let totalWidth = suffixWidth;\n        const len = overflowItemsWidth.length;\n        const lastIndex = len - 1;\n        for (let i = 0; i < len; i += 1) {\n          const currentItemWidth = overflowItemsWidth[i];\n          // Break since data not ready\n          if (currentItemWidth === undefined) {\n            this.updateDisplayCount(i - 1, true);\n            break;\n          } else {\n            // Find best match\n            totalWidth += currentItemWidth;\n\n            if (\n              // Only one means `totalWidth` is the final width\n              (lastIndex === 0 && totalWidth <= containerWidth) ||\n              // Last two width will be the final width\n              (i === lastIndex - 1 &&\n                overflowItemsWidth[lastIndex] !== undefined &&\n                totalWidth + overflowItemsWidth[lastIndex]! <= containerWidth)\n            ) {\n              // Additional check if match the end\n              this.updateDisplayCount(lastIndex);\n              this.suffixFixedStart$.next(null);\n              break;\n            } else if (totalWidth + maxRestWith > containerWidth) {\n              // Can not hold all the content to show rest\n              this.updateDisplayCount(i - 1);\n              this.suffixFixedStart$.next(totalWidth - currentItemWidth - suffixWidth + restWidth);\n              break;\n            }\n            this.cdr.detectChanges();\n          }\n        }\n        if (\n          this.overflowSuffix &&\n          overflowItemsWidth[0] !== undefined &&\n          overflowItemsWidth[0] + suffixWidth > containerWidth\n        ) {\n          this.suffixFixedStart$.next(null);\n        }\n\n        this.cdr.detectChanges();\n      });\n    combineLatest([this.suffixFixedStart$, this.displayCount$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([suffixFixedStart, displayCount]) => {\n        this.overflowSuffix?.setSuffixStyle(suffixFixedStart, displayCount);\n      });\n    combineLatest([this.displayCount$, this.overflowItems$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([displayCount, overflowItems]) =>\n        overflowItems.forEach((item, index) => item.setItemStyle(index <= displayCount, index))\n      );\n    combineLatest([this.displayRest$, this.displayCount$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([displayRest, displayCount]) => {\n        this.overflowRest?.setRestStyle(displayRest, displayRest ? displayCount : Number.MAX_SAFE_INTEGER);\n      });\n  }\n  ngAfterContentInit(): void {\n    this.overflowItems?.changes.pipe(startWith(this.overflowItems)).subscribe(this.overflowItems$);\n    this.overflowSuffix?.suffixWidth$.subscribe(this.suffixWidth$);\n    this.overflowRest?.restWidth$.subscribe(this.restWidth$);\n    this.contentInit$.next();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { NzResizeObserverModule } from 'ng-zorro-antd/cdk/resize-observer';\n\nimport { NzOverflowContainerComponent } from './overflow-container.component';\nimport { NzOverflowItemDirective } from './overflow-item.directive';\nimport { NzOverflowRestDirective } from './overflow-rest.directive';\nimport { NzOverflowSuffixDirective } from './overflow-suffix.directive';\n\n@NgModule({\n  imports: [NzResizeObserverModule],\n  declarations: [\n    NzOverflowContainerComponent,\n    NzOverflowItemDirective,\n    NzOverflowRestDirective,\n    NzOverflowSuffixDirective\n  ],\n  exports: [NzOverflowContainerComponent, NzOverflowItemDirective, NzOverflowRestDirective, NzOverflowSuffixDirective]\n})\nexport class NzOverflowModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport { NzOverflowModule } from './overflow.module';\nexport { NzOverflowContainerComponent } from './overflow-container.component';\nexport { NzOverflowItemDirective } from './overflow-item.directive';\nexport { NzOverflowRestDirective } from './overflow-rest.directive';\nexport { NzOverflowSuffixDirective } from './overflow-suffix.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}